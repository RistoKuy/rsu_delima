name: Scheduled Maintenance

on:
  schedule:
    # Run every Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  # Dependency Updates
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.2'
        channel: 'stable'
        cache: true
        
    - name: Update Flutter dependencies
      run: |
        flutter pub upgrade --major-versions
        flutter pub get
        
    - name: Run tests after update
      run: flutter test
      
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Flutter dependencies'
        title: 'Automated Dependency Updates'
        body: |
          This PR contains automated dependency updates.
          
          ## Changes
          - Updated Flutter dependencies to latest versions
          - All tests are passing
          
          Please review the changes before merging.
        branch: automated/dependency-updates
        delete-branch: true

  # Health Check
  health-check:
    name: Repository Health Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.2'
        channel: 'stable'
        cache: true
        
    - name: Check project health
      run: |
        echo "## Repository Health Report" > health-report.md
        echo "Generated on: $(date)" >> health-report.md
        echo "" >> health-report.md
        
        # Check for outdated dependencies
        echo "### Dependency Status" >> health-report.md
        flutter pub deps --style=compact >> health-report.md
        echo "" >> health-report.md
        
        # Check for unused dependencies
        echo "### Unused Dependencies Check" >> health-report.md
        flutter pub deps --json | jq '.packages[] | select(.kind == "direct") | .name' >> health-report.md
        echo "" >> health-report.md
        
        # Code quality metrics
        echo "### Code Quality" >> health-report.md
        echo "- Total Dart files: $(find lib -name '*.dart' | wc -l)" >> health-report.md
        echo "- Lines of code: $(find lib -name '*.dart' -exec wc -l {} + | tail -1 | awk '{print $1}')" >> health-report.md
        
    - name: Create issue with health report
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const healthReport = fs.readFileSync('health-report.md', 'utf8');
          
          // Check if an issue already exists
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['maintenance', 'health-check'],
            state: 'open'
          });
          
          if (issues.data.length === 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Weekly Health Check Report',
              body: healthReport,
              labels: ['maintenance', 'health-check']
            });
          }

  # Performance Monitoring
  performance-benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.2'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run performance tests
      run: |
        # Build release and measure build time
        time flutter build apk --release --obfuscate --split-debug-info=build/debug-info
        
        # Check app size
        APK_SIZE=$(stat -c%s "build/app/outputs/flutter-apk/app-release.apk")
        echo "APK Size: $APK_SIZE bytes" > performance-metrics.txt
        echo "APK Size (MB): $(echo "scale=2; $APK_SIZE/1024/1024" | bc)" >> performance-metrics.txt
        
    - name: Store performance metrics
      uses: actions/upload-artifact@v4
      with:
        name: performance-metrics
        path: performance-metrics.txt
        retention-days: 90
