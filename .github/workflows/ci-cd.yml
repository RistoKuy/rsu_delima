name: RSU Delima CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [published]

env:
  FLUTTER_VERSION: '3.27.2'
  JAVA_VERSION: '17'

jobs:
  # Static Analysis and Testing
  analyze-and-test:
    name: Code Analysis & Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze project source
      run: flutter analyze --no-fatal-infos
      
    - name: Run tests
      run: flutter test --coverage
      
    - name: Generate coverage report
      run: |
        echo "Coverage report generated at coverage/lcov.info"
        echo "Run 'genhtml coverage/lcov.info -o coverage/html' locally to view HTML report"

  # Build Android APK
  build-android:
    name: Build Android
    needs: analyze-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
      
    - name: Build APK (Debug)
      if: github.event_name == 'push' && github.ref != 'refs/heads/main'
      run: flutter build apk --debug
      
    - name: Build APK (Release)
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      run: flutter build apk --release --obfuscate --split-debug-info=build/debug-info
      
    - name: Build App Bundle (Release)
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      run: flutter build appbundle --release --obfuscate --split-debug-info=build/debug-info
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30
        
    - name: Upload App Bundle artifact
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

  # Build iOS
  build-ios:
    name: Build iOS
    needs: analyze-and-test
    runs-on: macos-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
      
    - name: Build iOS (Debug)
      if: github.event_name == 'push' && github.ref != 'refs/heads/main'
      run: |
        flutter build ios --debug --no-codesign
        
    - name: Build iOS (Release)
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      run: |
        flutter build ios --release --no-codesign
        
    - name: Create iOS Archive
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -archivePath build/Runner.xcarchive \
                   archive
                   
    - name: Upload iOS artifact
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: ios-archive
        path: ios/build/Runner.xcarchive
        retention-days: 30

  # Build Web
  build-web:
    name: Build Web
    needs: analyze-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
      
    - name: Build Web
      run: flutter build web --release --web-renderer html
      
    - name: Upload Web artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web
        retention-days: 30

  # Build Windows
  build-windows:
    name: Build Windows
    needs: analyze-and-test
    runs-on: windows-latest
    if: github.event_name == 'push' || github.event_name == 'release'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons
      
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Create Windows installer
      if: github.ref == 'refs/heads/main' || github.event_name == 'release'
      shell: powershell
      run: |
        # Create a simple installer package
        Compress-Archive -Path "build\windows\x64\runner\Release\*" -DestinationPath "rsu-delima-windows.zip"
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: rsu-delima-windows.zip
        retention-days: 30

  # Performance Analysis
  performance-analysis:
    name: Performance Analysis
    needs: analyze-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run performance analysis
      run: |
        echo "Running performance analysis..."
        flutter build apk --release --analyze-size --target-platform android-arm64
        
    - name: Generate size report
      run: |
        echo "## App Size Analysis" > size-report.md
        echo "\`\`\`" >> size-report.md
        cat build/app/outputs/flutter-apk/app-release.apk.size >> size-report.md
        echo "\`\`\`" >> size-report.md
        
    - name: Comment PR with size analysis
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const sizeReport = fs.readFileSync('size-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: sizeReport
          });

  # Security Scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  # Notify release completion
  notify-release:
    name: Notify Release
    needs: [build-android, build-web, build-ios, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Notify release completion
      run: |
        echo "ðŸŽ‰ RSU Delima release completed: ${{ github.event.release.tag_name }}"
        echo "All platform builds have been successfully generated and uploaded as release assets."

  # Cleanup old artifacts
  cleanup:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 100
          });
          
          const cutoff = new Date();
          cutoff.setDate(cutoff.getDate() - 30);
          
          for (const artifact of artifacts.data.artifacts) {
            if (new Date(artifact.created_at) < cutoff) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
              console.log(`Deleted artifact: ${artifact.name}`);
            }
          }
